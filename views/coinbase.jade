extends layout

block content
  .container-fluid
    h1 #{__('Coinbase Transactions')}
    - var peers = {1: '1'}
    - var tx = [{value: '0', from: '', to: ''}, {value: '0', from: '', to: ''}, {value: '0', from: '', to: ''}, {value: '0', from: '', to: ''}, {value: '0', from: '', to: ''}]
    - each peer, chain in peers
      h3 #{__('Peer')} #{peer}
      .row.row-horizon
        - var blocks = []
        - blocks.push({block: 1, chain: chain, nonce: 16651, coinbasevalue: '100', coinbaseto: '', txs: [], troco:[], previous: '0000000000000000000000000000000000000000000000000000000000000000'})
        - blocks.push({block: 2, chain: chain, nonce: 215458, coinbasevalue: '100', coinbaseto: '', txs: tx, troco:[{troco: ''}], previous: '0000438d7625b86a6f366545b1929975a0d3ff1f8847e56cc587cadddb0ab781'})
        - blocks.push({block: 3, chain: chain, nonce: 146, coinbasevalue: '100', coinbaseto: '', txs: tx, troco:[{troco: ''}], previous: '0000baeab68c2a60f9a6fa56355438d97c672a15494fcea617064d9314f9ff63'})
        - blocks.push({block: 4, chain: chain, nonce: 18292, coinbasevalue: '100', coinbaseto: '', txs: tx, troco:[{troco: ''}], previous: '0000df1d632b734f5a5fc126a0f0e8894fb4c8314ba7086b62980559af6771b9'})
        - blocks.push({block: 5, chain: chain, nonce: 108899, coinbasevalue: '100', coinbaseto: '', txs: tx, troco:[{troco: ''}], previous: '0000c694336f88129f3685bd3ba5d67c445dfd8d18bd22f5d87301dd560eb30e'})
        each block in blocks
          .col-xs-7
            include includes/coinbaseblock.jade

  script.
    $(function() {
      setup(1, 1);
      setup(2, 1);
      setup(3, 1);
      setup(4, 1);
      setup(5, 1);

      });

    

    function getText(block, chain) {
      var s = $('#block'+block+'chain'+chain+'number').val() +
              $('#block'+block+'chain'+chain+'nonce').val() +
              $('#block'+block+'chain'+chain+'coinbasevalue').val() +
              $('#block'+block+'chain'+chain+'coinbaseto').val();

      for (var x=0; $('#block'+block+'chain'+chain+'tx'+x+'value').length > 0; x++) {
        s = s + $('#block'+block+'chain'+chain+'tx'+x+'value').val() +
                $('#block'+block+'chain'+chain+'tx'+x+'from').val() +
                $('#block'+block+'chain'+chain+'tx'+x+'to').val();
      }
      s = s + $('#block'+block+'chain'+chain+'previous').val();
      return s;
    }

    function updateBlockCoinbase(block, chain, value, from, to) {
      var tx = 0;
      var invalidTransaction = false;
      var yourNumber = Math.random();
      console.log(value, from, to);
      var hexString = yourNumber.toString(16).replace('.', 'x');
      $('#block'+block+'chain'+chain+'coinbaseto').val(hexString);     
      var database = JSON.parse($('#database').val());
      if(block != 1) {
        for(var i = 0; i <= 5; i++) {
          
          if(database.hasOwnProperty(from[i]) ) {
            console.log(from[i]);  
            if(value > 0 && from != undefined && to!= undefined ) {
              tx = tx + 2
            }
          } else {
            invalidTransaction = true
          }
        }
      }

      database[hexString] = 100+tx;
      $('#database').val(JSON.stringify(database));
      console.log(JSON.stringify(database));


      return invalidTransaction;
    }

    function setup(block, chain) {
      updateHash(block, chain);
      $('#block'+block+'chain'+chain+'mineButton').click(function(e) {
          e.preventDefault();
          var l = Ladda.create(this);
          l.start();
          setTimeout(function() {
              mine(block, chain, true);
              if (block !== 1)
              
              var v,c = 0 
              
              var value = [];
              var from = [];
              var to = [];
              for (var i = 0; i <= 5; i++) {  
                value.push($('#block'+block+'chain'+chain+'tx'+i+'value').val());
                from.push($('#block'+block+'chain'+chain+'tx'+i+'from').val());
                to.push($('#block'+block+'chain'+chain+'tx'+i+'to').val());
              }

              updateBlockCoinbase(block, chain, value, from, to);
            
            if(value != 0  && block != 1) {
              
            } else {
              
          }
          
            l.stop();
            }, 250); // give UI time to update
        });
    }
